x-common-springboot-app-docker-settings: &common-springboot-app-docker-settings
  image: ${SPRING_BOOT_APP_IMAGE_REPOSITORY_PATH}:${SPRING_BOOT_APP_IMAGE_TAG}
  networks:
    - backend_network
  volumes:
    - ./data/springboot-app/logs:/logs
  depends_on:
    - mysql

x-springboot-app-secret: &springboot-app-secret
  TZ: "Asia/Seoul"
  SPRING_DATASOURCE_URL: ${DB_URL}
  SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
  SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    networks:
      - backend_network
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: always
    environment:
      TZ: Asia/Seoul
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  springboot-app:
    <<: *common-springboot-app-docker-settings
    container_name: springboot-app
    ports:
      - "8080:8080"
    environment:
      <<: *springboot-app-secret
      SERVER_PORT: 8080

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    networks:
      - backend_network
    volumes:
      - ./data/springboot-app/logs:/logs
      - ./data/promtail/promtail-config.yml:/etc/promtail/config.yml
    environment:
      TZ: "Asia/Seoul"
    command:
      - -config.file=/etc/promtail/config.yml

  certbot:
    image: certbot/certbot
    container_name: certbot
    networks:
      - backend_network
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend_network
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/nginx/html:/var/www/html
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    environment:
      TZ: "Asia/Seoul"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

networks:
  backend_network:
    external: true
